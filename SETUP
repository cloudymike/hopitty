#!/bin/bash
# Setup file to properly
# setup an Ubuntu server

# Enable for Travis debugging
#printenv

set -x
# When you are confident that all install is clean
#set -e

HOMEDIR=`pwd`
which python
python --version

sudo apt-get update

if [ "$TRAVIS_LANGUAGE" == "python" ]
then
  export PIP=$(which pip)
else
  sudo apt-get -y install python-setuptools
  sudo apt-get -y install python-pip
  sudo -H pip install --upgrade pip
  sudo apt-get remove -y python-pip
  export PIP=/usr/local/bin/pip2

fi
$PIP --version
sudo -H $PIP install -r ./requirements.txt

# Basic build tools
######################################
sudo apt-get -y install g++ make
sudo apt-get -y install unzip
sudo apt-get -y install xdotool
sudo apt-get -y install build-essential
sudo apt-get -y install libusb-1.0-0-dev

# TK for graphics
######################################
#sudo apt-get -y install python-tk
#sudo apt-get -y install python-gtk2
#sudo apt-get -y install python-gtk2-dev

# Documentation generation
######################################
sudo apt-get -y  install sphinx-common

# phidgets
#######################################
sudo apt-get install -y libusb-1.0-0-dev

pushd phidget
tar xvzf libphidget.tar.gz
#cd libphidget-2.1.8.20120912
cd libphidget-*
./configure
make
sudo make install
popd

pushd phidget
unzip PhidgetsPython.zip
cd PhidgetsPython/
sudo python setup.py install
popd

#Pololu, servo USB controller
#######################################
sudo apt-get install -y libusb-1.0-0-dev mono-gmcs mono-devel libmono-winforms2.0-cil
sudo apt-get install libmono-system-windows-forms4.0-cil
sudo apt-get install libusb-1.0-0-dev mono-runtime libmono-winforms2.0-cil

#cd /tmp
#wget -O pololu-usb-sdk-120712.zip http://www.pololu.com/file/download/pololu-usb-sdk-120712.zip?file_id=0J568
#unzip pololu-usb-sdk-120712.zip
#cd pololu-usb-sdk
# Avoid sudo requirement to access USB port
#sudo cp 99-pololu.rules /etc/udev/rules.d/

# Everything is compiled for x86 so you could skip the below two lines
# on an X86 machine
#make clean
#make
#cp -r Maestro/UscCmd $HOMEDIR


cd $HOMEDIR

# Newer version of pololu maestro
wget https://www.pololu.com/file/0J315/maestro-linux-150116.tar.gz
tar xvzf maestro-linux-150116.tar.gz
mv maestro-linux UscCmd
sudo cp UscCmd/99-pololu.rules /etc/udev/rules.d/


#DigiWeight
#######################################
pushd $HOMEDIR/DigiWeight
make
popd

# FTDI devices
######################################
sudo apt-get -y install libftdi-dev

cd $HOMEDIR
pushd ./boilerValve
./makeme
popd
pushd ./coolerUSB
./makeme
popd
pushd ./mashStirUSB
./makeme
popd

# Setup of a headless server to do selenium testing
# This will add some GUI cruft to the server.
######################################
sudo apt-get install -y firefox
sudo apt-get install -y xvfb
sudo apt-get install -y xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic

# For graphing tool
######################################
sudo apt-get -y install python-matplotlib
sudo apt-get -y install python-dev
sudo apt-get -y install freetype*
sudo apt-get -y install libpng-dev

sudo 'echo "backend : Agg" > /etc/matplotlibrc'

sudo apt-get -y install mosquitto

# Finally run all tests to see that install is OK
# This should be the end of the install file
######################################
cd $HOMEDIR

# Check all python versions installed
$PIP freeze

# python3
pip3 install boto3



# Check some specific troublesome packages
python -c 'import bottle; print bottle.__version__'
if [ "$?" != "0" ]; then exit 1; fi
python -c 'import usb; print usb.__version__'
if [ "$?" != "0" ]; then exit 1; fi
python -c 'import usb.core; print usb.core.__name__'
if [ "$?" != "0" ]; then exit 1; fi
python -c 'import sphinx; print sphinx.__version__'
if [ "$?" != "0" ]; then exit 1; fi
#python -c 'import pygtk; print pygtk.__name__'
#if [ "$?" != "0" ]; then exit 1; fi
