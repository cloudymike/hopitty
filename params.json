{"name":"Hopitty","tagline":"Python controller","body":"### Welcome to Hopitty, the fully automatic personal brewery\r\n\r\nThe intention of this project is to create brewing software that enables full grain brewing, and doing so fully automatically. The basic setup assumes an electric hot water tun, cooler mash tun and and a electric boiler. All sensors and controllers are USB based, and in general all USB devices has source code for drivers. Hopitty reads Beersmith recipes directly, (bxml files) but recipes can also be read from json files. The user interfaces is web based, to allow you to check the status of the brew from any web browser, rather than just from the computer running the controller.\r\n\r\nThe software is written in python. Some USB controllers are provided in other languages, as downloaded from the vendor. The code was written and tested on and Ubuntu PC.\r\n \r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n####One recipe controller\r\nThe one recipe controller will run interactively by loading a recipe on the command line. It is great for testing and for running a single recipe.\r\n\r\nHow to run\r\n==========\r\ncd src\r\n\r\nFor one recipe run:\r\n./runctrl.py -f ../recipes/something\r\n\r\nReading all beersmith recipes:\r\n./runscan.py\r\n\r\nGot to web page:\r\nhttp://localhost\r\n\r\nWeb pages\r\n=========\r\n(This may change)\r\nThe web pages are independent of the controller and communicates\r\nwith memcache\r\n\r\nThe scripts are mainly status script with addition of, when using runscan.py,\r\nallowing for selection of recipe and start a run\r\n\r\nTo install cgi-bin scripts, cd into src/cgibin and type sudo INSTALL\r\n\r\nNote cgi-bin is not a valid python module name so the dir needs to be cgibin.\r\nOtherwise many things will break including nosetests.\r\n\r\nHow to build\r\n============\r\nThe script SETUP in top dir should install all dependencies and run the tests.\r\nIf errors, check the script. It relies on the ability to download from different\r\nvendors.\r\n\r\nThis script will also setup the required web pages into /var/www\r\n\r\nTesting\r\n=======\r\nThe script checkall should do a comprehensive test. It will run a number of\r\nnose tests and then also a set of functional tests as well as a lint. IF any fails\r\nit will stop the tests.\r\n\r\nHardware specific code\r\n=======================\r\nThere are some code that is not python, that is required to control the hardware.\r\nThe code is all compiled within the setup script to allow portability. For details\r\ncheck the web pages of the vendors. The wget statement in SETUP is a good hint.\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}