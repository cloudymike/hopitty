Where to start
===============
refactoring of runctrl.py
Consider that we should be able to run each def
as a separate. Consider how to start and stop as well.

====== Post brew issues and observations =======
after brew 130202
Post cleaning not working as it relies on scale.

after brew 130126
Add a link to gravity/temperature calculator on the web

Add key mashing data to mash status page from recipe
  Equipment temperature
  (mash schedule..)

====== To Fix =======
refactoring
  stages class ( & module)

refactoring
  runctrl.py, breakout as a def or class
  Should be possible to call (as needed when recipelist is done

Break out getop and use an options dictionary

How to start a brew?

cloudrecipe.py as standalone exec

Add the user for the path to the home dir bsmx file as an input option
to recipeScanner

===== Hardware Issues =====
Hardware are sometimes failing at startup. Test this in loop.

X10 controller hangs at startup at times. Debug this. It seems like a reboot
fixes the problem.

Consider create a HW check mode, that will fail if not all hardware sensors and 
controllers are OK


==== Checks =====
  mutex (link to other controller that should NOT be activated at same time)
  max values (as pump volume)
  Timeouts?
  watch dogs? Water checks?


==== Unknown ====
dict_.get('key2', "Key doesn't exist")

Watchdog to shut all down?


